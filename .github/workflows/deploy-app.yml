name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: hellonew
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster example-cluster --service example-service --force-new-deployment

  sast:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Bandit (Python Security Linter)
        run: |
          pip install bandit
          bandit -r .

      - name: Run TFSec (Terraform Security Scanner)
        run: |
          curl -L "$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E "https://.+?_linux_amd64.tar.gz")" -o tfsec.tar.gz
          mkdir tfsec && tar -xzf tfsec.tar.gz -C tfsec --strip-components=1
          sudo mv tfsec/tfsec /usr/local/bin/tfsec
          tfsec .

  dast:
    name: Dynamic Application Security Testing (DAST)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: "http://example.com" # Replace with your deployed application URL
